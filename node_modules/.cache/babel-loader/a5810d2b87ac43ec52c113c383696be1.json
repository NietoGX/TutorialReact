{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sevi\\\\Tutoriales\\\\TutoFetel\\\\weather-app\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity';\nimport { PropTypes } from 'prop-types';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport transformWeather from './../../services/transformWeather';\nimport './styles.css';\nimport { CLOUD, WINDY, SUN } from './../../constants/weathers';\n/* CÓDIGO EJEMPLO PROMISES */\n\n/* \r\n    let promesa= new Promise((resolve, rejected)) => {\r\n        setTimeout(() =>{\r\n            resolve(\"Exito total!\");\r\n        },2000);\r\n        });\r\n    console.log(\"Ahora comienza\");\r\n\r\n    promesa.then((mensaje) => {\r\n\r\n        console.log(mensaje);\r\n        console.log(\"Acabado\");\r\n    }).catch((error) => {\r\n        console.log(mensaje);\r\n    });\r\n\r\n    \r\n} */\n\nclass WeatherLocation extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUpdateClick = () => {\n      const api_weather = getUrlWeatherByCity(this.state.city);\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = transformWeather(data);\n        console.log(newWeather);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    const {\n      city\n    } = props;\n    this.state = {\n      city,\n      data: null\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdateClick();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    const {\n      city,\n      data\n    } = this.state;\n    const {\n      onWeatherLocationClick\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      onClick: onWeatherLocationClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), data ? /*#__PURE__*/React.createElement(WeatherData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(CircularProgress, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 50\n      }\n    }));\n  }\n\n}\n\nWeatherLocation.propTypes = {\n  city: PropTypes.string.isRequired,\n  onWeatherLocationClick: PropTypes.func\n};\nexport default WeatherLocation;","map":{"version":3,"sources":["C:/Sevi/Tutoriales/TutoFetel/weather-app/src/components/WeatherLocation/index.js"],"names":["React","CircularProgress","getUrlWeatherByCity","PropTypes","Location","WeatherData","transformWeather","CLOUD","WINDY","SUN","WeatherLocation","Component","constructor","props","handleUpdateClick","api_weather","state","city","fetch","then","resolve","json","data","newWeather","console","log","setState","componentDidMount","componentDidUpdate","prevProps","prevState","render","onWeatherLocationClick","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AACA,SAASC,SAAT,QAAyB,YAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAO,cAAP;AAGA,SACIC,KADJ,EAEIC,KAFJ,EAGIC,GAHJ,QAIO,4BAJP;AASA;;AACA;;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,eAAN,SAA8BV,KAAK,CAACW,SAApC,CAA6C;AAEzCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAmBlBC,iBAnBkB,GAmBE,MAAM;AACtB,YAAMC,WAAW,GAAGb,mBAAmB,CAAC,KAAKc,KAAL,CAAWC,IAAZ,CAAvC;AACAC,MAAAA,KAAK,CAACH,WAAD,CAAL,CAAmBI,IAAnB,CAAwBC,OAAO,IAAG;AAC9B,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZ,cAAMC,UAAU,GAAGjB,gBAAgB,CAACgB,IAAD,CAAnC;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,aAAKG,QAAL,CAAc;AACVJ,UAAAA,IAAI,EAAEC;AADI,SAAd;AAOH,OAZD;AAcH,KAnCiB;;AAEd,UAAM;AAACN,MAAAA;AAAD,QAASJ,KAAf;AACA,SAAKG,KAAL,GAAW;AACPC,MAAAA,IADO;AAEPK,MAAAA,IAAI,EAAE;AAFC,KAAX;AAIH;;AAEDK,EAAAA,iBAAiB,GAAG;AAChB,SAAKb,iBAAL;AAEH;;AAEDc,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAqBDC,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACd,MAAAA,IAAD;AAAMK,MAAAA;AAAN,QAAa,KAAKN,KAAvB;AACA,UAAM;AAACgB,MAAAA;AAAD,QAA2B,KAAKnB,KAAtC;AACA,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAqC,MAAA,OAAO,EAAEmB,sBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEf,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEKK,IAAI,gBAAG,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAEA,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,gBAAgC,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFzC,CADA;AAMH;;AAhDwC;;AAoD7CZ,eAAe,CAACuB,SAAhB,GAA2B;AACvBhB,EAAAA,IAAI,EAAEd,SAAS,CAAC+B,MAAV,CAAiBC,UADA;AAEvBH,EAAAA,sBAAsB,EAAE7B,SAAS,CAACiC;AAFX,CAA3B;AAKA,eAAe1B,eAAf","sourcesContent":["import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport getUrlWeatherByCity from './../../services/getUrlWeatherByCity'\r\nimport { PropTypes} from 'prop-types';\r\nimport Location from './Location';\r\nimport WeatherData from './WeatherData';\r\nimport transformWeather from './../../services/transformWeather'\r\nimport './styles.css'\r\n\r\n\r\nimport{\r\n    CLOUD,\r\n    WINDY,\r\n    SUN,\r\n} from './../../constants/weathers'\r\n\r\n\r\n\r\n\r\n/* CÓDIGO EJEMPLO PROMISES */\r\n/* \r\n    let promesa= new Promise((resolve, rejected)) => {\r\n        setTimeout(() =>{\r\n            resolve(\"Exito total!\");\r\n        },2000);\r\n        });\r\n    console.log(\"Ahora comienza\");\r\n\r\n    promesa.then((mensaje) => {\r\n\r\n        console.log(mensaje);\r\n        console.log(\"Acabado\");\r\n    }).catch((error) => {\r\n        console.log(mensaje);\r\n    });\r\n\r\n    \r\n} */\r\nclass WeatherLocation extends React.Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        const {city} = props;\r\n        this.state={\r\n            city,\r\n            data: null,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleUpdateClick();\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n    }\r\n    \r\n\r\n    handleUpdateClick = () => {\r\n        const api_weather = getUrlWeatherByCity(this.state.city);\r\n        fetch(api_weather).then(resolve =>{\r\n            return resolve.json();\r\n        }).then(data => {\r\n            const newWeather = transformWeather(data);\r\n            console.log(newWeather);\r\n            this.setState({\r\n                data: newWeather\r\n            });\r\n\r\n\r\n\r\n            \r\n        });\r\n\r\n    }\r\n    \r\n    render(){\r\n        const{city,data}= this.state;\r\n        const {onWeatherLocationClick} = this.props;\r\n        return(\r\n        <div className=\"weatherLocationCont\" onClick={onWeatherLocationClick}>\r\n            <Location city={city}/>\r\n            {data ? <WeatherData data={data}/> : <CircularProgress/>}\r\n        </div>);\r\n        \r\n    }\r\n}\r\n    \r\n\r\nWeatherLocation.propTypes= {\r\n    city: PropTypes.string.isRequired,\r\n    onWeatherLocationClick: PropTypes.func,\r\n}\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}