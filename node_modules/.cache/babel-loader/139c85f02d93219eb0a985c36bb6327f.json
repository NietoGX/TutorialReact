{"ast":null,"code":"var _jsxFileName = \"C:\\\\Sevi\\\\Tutoriales\\\\TutoFetel\\\\weather-app\\\\src\\\\components\\\\WeatherLocation\\\\index.js\";\nimport React from 'react';\nimport Location from './Location';\nimport WeatherData from './WeatherData';\nimport transformWeather from './../../services/transformWeather';\nimport './styles.css';\nimport { api_weather } from './../../constants/api_url';\nimport { CLOUD, WINDY, SUN } from './../../constants/weathers';\nconst data = {\n  temperature: 7,\n  weatherState: CLOUD,\n  humidity: 10,\n  wind: '10 m/s'\n};\n/* CÓDIGO EJEMPLO PROMISES */\n\n/* \r\n    let promesa= new Promise((resolve, rejected)) => {\r\n        setTimeout(() =>{\r\n            resolve(\"Exito total!\");\r\n        },2000);\r\n        });\r\n    console.log(\"Ahora comienza\");\r\n\r\n    promesa.then((mensaje) => {\r\n\r\n        console.log(mensaje);\r\n        console.log(\"Acabado\");\r\n    }).catch((error) => {\r\n        console.log(mensaje);\r\n    });\r\n\r\n    \r\n} */\n\nclass WeatherLocation extends React.Component {\n  constructor() {\n    super();\n\n    this.handleUpdateClick = () => {\n      fetch(api_weather).then(resolve => {\n        return resolve.json();\n      }).then(data => {\n        const newWeather = transformWeather(data);\n        console.log(newWeather);\n        this.setState({\n          data: newWeather\n        });\n      });\n    };\n\n    this.state = {\n      city: \"Valencia\",\n      data: data\n    };\n  }\n\n  componentDidMount() {\n    this.handleUpdateClick();\n  }\n\n  componentDidUpdate(prevProps, prevState) {}\n\n  render() {\n    const {\n      city,\n      data\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weatherLocationCont\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Location, {\n      city: city,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(WeatherData, {\n      data: data,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpdateClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"Actualizar\"));\n  }\n\n}\n\nexport default WeatherLocation;","map":{"version":3,"sources":["C:/Sevi/Tutoriales/TutoFetel/weather-app/src/components/WeatherLocation/index.js"],"names":["React","Location","WeatherData","transformWeather","api_weather","CLOUD","WINDY","SUN","data","temperature","weatherState","humidity","wind","WeatherLocation","Component","constructor","handleUpdateClick","fetch","then","resolve","json","newWeather","console","log","setState","state","city","componentDidMount","componentDidUpdate","prevProps","prevState","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAO,cAAP;AAEA,SACIC,WADJ,QAEO,2BAFP;AAGA,SACIC,KADJ,EAEIC,KAFJ,EAGIC,GAHJ,QAIO,4BAJP;AASA,MAAMC,IAAI,GAAC;AACPC,EAAAA,WAAW,EAAE,CADN;AAEPC,EAAAA,YAAY,EAACL,KAFN;AAGPM,EAAAA,QAAQ,EAAC,EAHF;AAIPC,EAAAA,IAAI,EAAE;AAJC,CAAX;AAOA;;AACA;;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,eAAN,SAA8Bb,KAAK,CAACc,SAApC,CAA6C;AAEzCC,EAAAA,WAAW,GAAE;AACT;;AADS,SAsBbC,iBAtBa,GAsBO,MAAM;AACtBC,MAAAA,KAAK,CAACb,WAAD,CAAL,CAAmBc,IAAnB,CAAwBC,OAAO,IAAG;AAC9B,eAAOA,OAAO,CAACC,IAAR,EAAP;AACH,OAFD,EAEGF,IAFH,CAEQV,IAAI,IAAI;AACZ,cAAMa,UAAU,GAAGlB,gBAAgB,CAACK,IAAD,CAAnC;AACAc,QAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ;AACA,aAAKG,QAAL,CAAc;AACVhB,UAAAA,IAAI,EAAEa;AADI,SAAd;AAOH,OAZD;AAcH,KArCY;;AAET,SAAKI,KAAL,GAAW;AACPC,MAAAA,IAAI,EAAC,UADE;AAEPlB,MAAAA,IAAI,EAAEA;AAFC,KAAX;AAIH;;AAEDmB,EAAAA,iBAAiB,GAAG;AAChB,SAAKX,iBAAL;AACH;;AAEDY,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB,CAExC;;AAwBDC,EAAAA,MAAM,GAAE;AACJ,UAAK;AAACL,MAAAA,IAAD;AAAMlB,MAAAA;AAAN,QAAa,KAAKiB,KAAvB;AAEA,wBACA;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAEC,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEI,oBAAC,WAAD;AAAa,MAAA,IAAI,EAAElB,IAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,KAAKQ,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,CADA;AAOH;;AAlDwC;;AAwD7C,eAAeH,eAAf","sourcesContent":["import React from 'react';\r\nimport Location from './Location';\r\nimport WeatherData from './WeatherData';\r\nimport transformWeather from './../../services/transformWeather'\r\nimport './styles.css'\r\n\r\nimport {\r\n    api_weather\r\n} from './../../constants/api_url';\r\nimport{\r\n    CLOUD,\r\n    WINDY,\r\n    SUN,\r\n} from './../../constants/weathers'\r\n\r\n\r\n\r\n\r\nconst data={\r\n    temperature: 7,\r\n    weatherState:CLOUD,\r\n    humidity:10,\r\n    wind: '10 m/s'\r\n}\r\n\r\n/* CÓDIGO EJEMPLO PROMISES */\r\n/* \r\n    let promesa= new Promise((resolve, rejected)) => {\r\n        setTimeout(() =>{\r\n            resolve(\"Exito total!\");\r\n        },2000);\r\n        });\r\n    console.log(\"Ahora comienza\");\r\n\r\n    promesa.then((mensaje) => {\r\n\r\n        console.log(mensaje);\r\n        console.log(\"Acabado\");\r\n    }).catch((error) => {\r\n        console.log(mensaje);\r\n    });\r\n\r\n    \r\n} */\r\nclass WeatherLocation extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            city:\"Valencia\",\r\n            data: data,\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.handleUpdateClick();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        \r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    handleUpdateClick = () => {\r\n        fetch(api_weather).then(resolve =>{\r\n            return resolve.json();\r\n        }).then(data => {\r\n            const newWeather = transformWeather(data);\r\n            console.log(newWeather);\r\n            this.setState({\r\n                data: newWeather\r\n            });\r\n\r\n\r\n\r\n            \r\n        });\r\n\r\n    }\r\n    render(){\r\n        const{city,data}= this.state;\r\n        \r\n        return(\r\n        <div className=\"weatherLocationCont\">\r\n            <Location city={city}/>\r\n            <WeatherData data={data}/>\r\n            <button onClick={this.handleUpdateClick}>Actualizar</button>\r\n        </div>);\r\n        \r\n    }\r\n}\r\n    \r\n\r\n\r\n\r\nexport default WeatherLocation;"]},"metadata":{},"sourceType":"module"}